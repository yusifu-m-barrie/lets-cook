{"ast":null,"code":"import React, { useLayoutEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { getIngredientUrl, getRecipesByIngredient, getCategoryName } from \"../../data/MockDataAPI\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function IngredientScreen(props) {\n  var _route$params, _route$params2;\n  var navigation = props.navigation,\n    route = props.route;\n  var ingredientId = (_route$params = route.params) == null ? void 0 : _route$params.ingredient;\n  var ingredientUrl = getIngredientUrl(ingredientId);\n  var ingredientName = (_route$params2 = route.params) == null ? void 0 : _route$params2.name;\n  useLayoutEffect(function () {\n    var _route$params3;\n    navigation.setOptions({\n      title: (_route$params3 = route.params) == null ? void 0 : _route$params3.name\n    });\n  }, []);\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n  var renderRecipes = function renderRecipes(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      children: _jsx(TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,0.9)\",\n        onPress: function onPress() {\n          return onPressRecipe(item);\n        },\n        children: _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Image, {\n            style: styles.photo,\n            source: {\n              uri: item.photo_url\n            }\n          }), _jsx(Text, {\n            style: styles.title,\n            children: item.title\n          }), _jsx(Text, {\n            style: styles.category,\n            children: getCategoryName(item.categoryId)\n          })]\n        })\n      })\n    });\n  };\n  return _jsxs(ScrollView, {\n    style: styles.mainContainer,\n    children: [_jsx(View, {\n      style: {\n        borderBottomWidth: 0.4,\n        marginBottom: 10,\n        borderBottomColor: \"grey\"\n      },\n      children: _jsx(Image, {\n        style: styles.photoIngredient,\n        source: {\n          uri: \"\" + ingredientUrl\n        }\n      })\n    }), _jsxs(Text, {\n      style: styles.ingredientInfo,\n      children: [\"Recipes with \", ingredientName, \":\"]\n    }), _jsx(View, {\n      children: _jsx(FlatList, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        numColumns: 2,\n        data: getRecipesByIngredient(ingredientId),\n        renderItem: renderRecipes,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.recipeId;\n        }\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useLayoutEffect","styles","getIngredientUrl","getRecipesByIngredient","getCategoryName","IngredientScreen","props","navigation","route","ingredientId","params","ingredient","ingredientUrl","ingredientName","name","setOptions","title","onPressRecipe","item","navigate","renderRecipes","container","photo","uri","photo_url","category","categoryId","mainContainer","borderBottomWidth","marginBottom","borderBottomColor","photoIngredient","ingredientInfo","recipeId"],"sources":["/home/ayon/Documents/let-cook/src/screens/Ingredient/IngredientScreen.js"],"sourcesContent":["import React, { useLayoutEffect } from \"react\";\nimport { FlatList, ScrollView, Text, View, Image, TouchableHighlight } from \"react-native\";\nimport styles from \"./styles\";\nimport { getIngredientUrl, getRecipesByIngredient, getCategoryName } from \"../../data/MockDataAPI\";\n\nexport default function IngredientScreen(props) {\n  const { navigation, route } = props;\n\n  const ingredientId = route.params?.ingredient;\n  const ingredientUrl = getIngredientUrl(ingredientId);\n  const ingredientName = route.params?.name;\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: route.params?.name,\n    });\n  }, []);\n\n  const onPressRecipe = (item) => {\n    navigation.navigate(\"Recipe\", { item });\n  };\n\n  const renderRecipes = ({ item }) => (\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressRecipe(item)}>\n      <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressRecipe(item)}>\n        <View style={styles.container}>\n          <Image style={styles.photo} source={{ uri: item.photo_url }} />\n          <Text style={styles.title}>{item.title}</Text>\n          <Text style={styles.category}>{getCategoryName(item.categoryId)}</Text>\n        </View>\n      </TouchableHighlight>\n    </TouchableHighlight>\n  );\n\n  return (\n    <ScrollView style={styles.mainContainer}>\n      <View style={{ borderBottomWidth: 0.4, marginBottom: 10, borderBottomColor: \"grey\" }}>\n        <Image style={styles.photoIngredient} source={{ uri: \"\" + ingredientUrl }} />\n      </View>\n      <Text style={styles.ingredientInfo}>Recipes with {ingredientName}:</Text>\n      <View>\n        <FlatList vertical showsVerticalScrollIndicator={false} numColumns={2} data={getRecipesByIngredient(ingredientId)} renderItem={renderRecipes} keyExtractor={(item) => `${item.recipeId}`} />\n      </View>\n    </ScrollView>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,eAAe,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAE/C,OAAOC,MAAM;AACb,SAASC,gBAAgB,EAAEC,sBAAsB,EAAEC,eAAe;AAAiC;AAAA;AAEnG,eAAe,SAASC,gBAAgB,CAACC,KAAK,EAAE;EAAA;EAC9C,IAAQC,UAAU,GAAYD,KAAK,CAA3BC,UAAU;IAAEC,KAAK,GAAKF,KAAK,CAAfE,KAAK;EAEzB,IAAMC,YAAY,oBAAGD,KAAK,CAACE,MAAM,qBAAZ,cAAcC,UAAU;EAC7C,IAAMC,aAAa,GAAGV,gBAAgB,CAACO,YAAY,CAAC;EACpD,IAAMI,cAAc,qBAAGL,KAAK,CAACE,MAAM,qBAAZ,eAAcI,IAAI;EAEzCd,eAAe,CAAC,YAAM;IAAA;IACpBO,UAAU,CAACQ,UAAU,CAAC;MACpBC,KAAK,oBAAER,KAAK,CAACE,MAAM,qBAAZ,eAAcI;IACvB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMG,aAAa,GAAG,SAAhBA,aAAa,CAAIC,IAAI,EAAK;IAC9BX,UAAU,CAACY,QAAQ,CAAC,QAAQ,EAAE;MAAED,IAAI,EAAJA;IAAK,CAAC,CAAC;EACzC,CAAC;EAED,IAAME,aAAa,GAAG,SAAhBA,aAAa;IAAA,IAAMF,IAAI,QAAJA,IAAI;IAAA,OAC3B,KAAC,kBAAkB;MAAC,aAAa,EAAC,qBAAqB;MAAC,OAAO,EAAE;QAAA,OAAMD,aAAa,CAACC,IAAI,CAAC;MAAA,CAAC;MAAA,UACzF,KAAC,kBAAkB;QAAC,aAAa,EAAC,qBAAqB;QAAC,OAAO,EAAE;UAAA,OAAMD,aAAa,CAACC,IAAI,CAAC;QAAA,CAAC;QAAA,UACzF,MAAC,IAAI;UAAC,KAAK,EAAEjB,MAAM,CAACoB,SAAU;UAAA,WAC5B,KAAC,KAAK;YAAC,KAAK,EAAEpB,MAAM,CAACqB,KAAM;YAAC,MAAM,EAAE;cAAEC,GAAG,EAAEL,IAAI,CAACM;YAAU;UAAE,EAAG,EAC/D,KAAC,IAAI;YAAC,KAAK,EAAEvB,MAAM,CAACe,KAAM;YAAA,UAAEE,IAAI,CAACF;UAAK,EAAQ,EAC9C,KAAC,IAAI;YAAC,KAAK,EAAEf,MAAM,CAACwB,QAAS;YAAA,UAAErB,eAAe,CAACc,IAAI,CAACQ,UAAU;UAAC,EAAQ;QAAA;MAClE;IACY,EACF;EAAA,CACtB;EAED,OACE,MAAC,UAAU;IAAC,KAAK,EAAEzB,MAAM,CAAC0B,aAAc;IAAA,WACtC,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEC,iBAAiB,EAAE,GAAG;QAAEC,YAAY,EAAE,EAAE;QAAEC,iBAAiB,EAAE;MAAO,CAAE;MAAA,UACnF,KAAC,KAAK;QAAC,KAAK,EAAE7B,MAAM,CAAC8B,eAAgB;QAAC,MAAM,EAAE;UAAER,GAAG,EAAE,EAAE,GAAGX;QAAc;MAAE;IAAG,EACxE,EACP,MAAC,IAAI;MAAC,KAAK,EAAEX,MAAM,CAAC+B,cAAe;MAAA,4BAAenB,cAAc;IAAA,EAAS,EACzE,KAAC,IAAI;MAAA,UACH,KAAC,QAAQ;QAAC,QAAQ;QAAC,4BAA4B,EAAE,KAAM;QAAC,UAAU,EAAE,CAAE;QAAC,IAAI,EAAEV,sBAAsB,CAACM,YAAY,CAAE;QAAC,UAAU,EAAEW,aAAc;QAAC,YAAY,EAAE,sBAACF,IAAI;UAAA,YAAQA,IAAI,CAACe,QAAQ;QAAA;MAAG;IAAG,EACvL;EAAA,EACI;AAEjB"},"metadata":{},"sourceType":"module"}