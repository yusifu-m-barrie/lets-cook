{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport styles from \"./styles\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getCategoryName, getRecipesByRecipeName, getRecipesByCategoryName, getRecipesByIngredientName } from \"../../data/MockDataAPI\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SearchScreen(props) {\n  var navigation = props.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    data = _useState4[0],\n    setData = _useState4[1];\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return _jsx(MenuImage, {\n          onPress: function onPress() {\n            navigation.openDrawer();\n          }\n        });\n      },\n      headerTitle: function headerTitle() {\n        return _jsxs(View, {\n          style: styles.searchContainer,\n          children: [_jsx(Image, {\n            style: styles.searchIcon,\n            source: require(\"../../../assets/icons/search.png\")\n          }), _jsx(TextInput, {\n            style: styles.searchInput,\n            onChangeText: handleSearch,\n            value: value\n          }), _jsx(Pressable, {\n            onPress: function onPress() {\n              return handleSearch(\"\");\n            },\n            children: _jsx(Image, {\n              style: styles.searchIcon,\n              source: require(\"../../../assets/icons/close.png\")\n            })\n          })]\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsx(View, {});\n      }\n    });\n  }, [value]);\n  useEffect(function () {}, [value]);\n  var handleSearch = function handleSearch(text) {\n    setValue(text);\n    var recipeArray1 = getRecipesByRecipeName(text);\n    var recipeArray2 = getRecipesByCategoryName(text);\n    var recipeArray3 = getRecipesByIngredientName(text);\n    var aux = recipeArray1.concat(recipeArray2);\n    var recipeArray = _toConsumableArray(new Set(aux));\n    if (text == \"\") {\n      setData([]);\n    } else {\n      setData(recipeArray);\n    }\n  };\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n  var renderRecipes = function renderRecipes(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Image, {\n          style: styles.photo,\n          source: {\n            uri: item.photo_url\n          }\n        }), _jsx(Text, {\n          style: styles.title,\n          children: item.title\n        }), _jsx(Text, {\n          style: styles.category,\n          children: getCategoryName(item.categoryId)\n        })]\n      })\n    });\n  };\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      vertical: true,\n      showsVerticalScrollIndicator: false,\n      numColumns: 2,\n      data: data,\n      renderItem: renderRecipes,\n      keyExtractor: function keyExtractor(item) {\n        return \"\" + item.recipeId;\n      }\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useState","styles","MenuImage","getCategoryName","getRecipesByRecipeName","getRecipesByCategoryName","getRecipesByIngredientName","TextInput","SearchScreen","props","navigation","value","setValue","data","setData","setOptions","headerLeft","openDrawer","headerTitle","searchContainer","searchIcon","require","searchInput","handleSearch","headerRight","text","recipeArray1","recipeArray2","recipeArray3","aux","concat","recipeArray","Set","onPressRecipe","item","navigate","renderRecipes","container","photo","uri","photo_url","title","category","categoryId","recipeId"],"sources":["/home/ayon/Documents/let-cook/src/screens/Search/SearchScreen.js"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { FlatList, Text, View, Image, TouchableHighlight, Pressable } from \"react-native\";\nimport styles from \"./styles\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getCategoryName, getRecipesByRecipeName, getRecipesByCategoryName, getRecipesByIngredientName } from \"../../data/MockDataAPI\";\nimport { TextInput } from \"react-native-gesture-handler\";\n\nexport default function SearchScreen(props) {\n  const { navigation } = props;\n\n  const [value, setValue] = useState(\"\");\n  const [data, setData] = useState([]);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerLeft: () => (\n        <MenuImage\n          onPress={() => {\n            navigation.openDrawer();\n          }}\n        />\n      ),\n      headerTitle: () => (\n        <View style={styles.searchContainer}>\n          <Image style={styles.searchIcon} source={require(\"../../../assets/icons/search.png\")} />\n          <TextInput\n            style={styles.searchInput}\n            onChangeText={handleSearch}\n            value={value}\n          />\n          <Pressable onPress={() => handleSearch(\"\")}>\n          <Image style={styles.searchIcon} source={require(\"../../../assets/icons/close.png\")} />\n          </Pressable>\n        </View>\n      ),\n      headerRight: () => <View />,\n    });\n  }, [value]);\n\n  useEffect(() => {}, [value]);\n\n  const handleSearch = (text) => {\n    setValue(text);\n    var recipeArray1 = getRecipesByRecipeName(text);\n    var recipeArray2 = getRecipesByCategoryName(text);\n    var recipeArray3 = getRecipesByIngredientName(text);\n    var aux = recipeArray1.concat(recipeArray2);\n    var recipeArray = [...new Set(aux)];\n\n    if (text == \"\") {\n      setData([]);\n    } else {\n      setData(recipeArray);\n    }\n  };\n\n  const onPressRecipe = (item) => {\n    navigation.navigate(\"Recipe\", { item });\n  };\n\n  const renderRecipes = ({ item }) => (\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressRecipe(item)}>\n      <View style={styles.container}>\n        <Image style={styles.photo} source={{ uri: item.photo_url }} />\n        <Text style={styles.title}>{item.title}</Text>\n        <Text style={styles.category}>{getCategoryName(item.categoryId)}</Text>\n      </View>\n    </TouchableHighlight>\n  );\n\n  return (\n    <View>\n      <FlatList vertical showsVerticalScrollIndicator={false} numColumns={2} data={data} renderItem={renderRecipes} keyExtractor={(item) => `${item.recipeId}`} />\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}